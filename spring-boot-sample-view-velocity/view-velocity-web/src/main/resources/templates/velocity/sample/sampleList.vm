<!-- Query -->
<form id="query" action="${request.contextPath}/samples/" method="get">
    <input type="hidden" name="number" value="1">
    <input type="hidden" name="size" value="9">
    <div class="form-row">
        <div class="form-group col-md-2">
            <label for="sampleInteger">整形</label>
            <input type="number" class="form-control" name="sampleInteger" value="$!{query.sampleInteger}">
        </div>
        <div class="form-group col-md-2">
            <label for="sampleString">字符串</label>
            <input type="text" class="form-control" name="sampleString" value="$!{query.sampleString}">
        </div>
        <div class="form-group col-md-2">
            <label for="minAmount">最小金额</label>
            <input type="number" class="form-control" name="minAmount" value="$!{query.minAmount}">
        </div>
        <div class="form-group col-md-2">
            <label for="maxAmount">最大金额</label>
            <input type="number" class="form-control" name="maxAmount" value="$!{query.maxAmount}">
        </div>
        <div class="form-group col-md-2">
            <label for="minDate">最小日期</label>
            <input type="date" class="form-control" name="minDate" value="$!{query.minDate}">
        </div>
        <div class="form-group col-md-2">
            <label for="maxDate">最大日期</label>
            <input type="date" class="form-control" name="maxDate" value="$!{query.maxDate}">
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-2">
            <label for="minDateTime">最小日期时间</label>
            <input type="datetime-local" class="form-control" name="minDateTime" value="$!{query.minDateTime}">
        </div>
        <div class="form-group col-md-2">
            <label for="maxDateTime">最大日期时间</label>
            <input type="datetime-local" class="form-control" name="maxDateTime" value="$!{query.maxDateTime}">
        </div>
        <div class="form-group col-md-2">
            <label for="sampleEnums">类型</label>
            <select class="selectpicker form-control border" multiple title="请选择" name="sampleEnums">
                #foreach ($item in ${sampleEnums})
                    #if(${query.sampleEnums.contains(${item.value})})
                        <option value="${item.value}" selected>${item.label}</option>
                    #else
                        <option value="${item.value}">${item.label}</option>
                    #end
                #end
            </select>
        </div>
    </div>
    <div class="float-right">
        <button type="submit" class="btn btn-outline-primary">查询</button>
        <button type="button" class="btn btn-outline-success" onclick="create()">添加</button>
        <button type="button" class="btn btn-outline-danger" onclick="deleteByIds()">删除</button>
    </div>
</form>

<!-- List -->
<div id="list" class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
        <tr>
            <th class="align-top">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" onclick="theadCheckboxClick(this)">
                </div>
            </th>
            <th>整形</th>
            <th>单精度</th>
            <th>双精度</th>
            <th>字符串</th>
            <th>日期</th>
            <th>日期时间</th>
            <th>金额</th>
            <th>类型</th>
            <th>操作</th>
        </tr>
        </thead>
        <tbody>
            #foreach ($sample in ${samples})
            <tr>
                <td>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="${sample.id}" onclick="tbodyCheckboxClick(this)">
                    </div>
                </td>
                <td>$!{sample.sampleInteger}</td>
                <td>$!{sample.sampleFloat}</td>
                <td>$!{sample.sampleDouble}</td>
                <td>$!{sample.sampleString}</td>
                <td>$!{sample.sampleDate}</td>
                <td>$!{sample.sampleDateTime.replace("T", " ")}</td>
                <td>$!{sample.sampleAmount}</td>
                <td>$SampleEnum.valueOf($sample.sampleEnum).label</td>
                <td>
                    <button type="button" class="btn btn-outline-info" onclick="get(${sample.id})">查看</button>
                    <button type="button" class="btn btn-outline-warning" onclick="update(${sample.id})">更新</button>
                    <button type="button" class="btn btn-outline-danger" onclick="deleteById(${sample.id})">删除</button>
                </td>
            </tr>
            #end
        </tbody>
    </table>
</div>

<script type="text/javascript">
    /**
     * 查询列表
     */
    function list() {
        var queryForm = $('#query');
        queryForm.find('input[name="number"]').val(${page.number});
        queryForm.find('input[name="size"]').val(${page.size});
        $.ajax({
            url: queryForm.attr('action'),
            method: 'GET',
            dataType: 'html',
            data: queryForm.serialize(),
            success: function(data) {
                $('#list').replaceWith($(data).find('#list'));
                $('#pagination').replaceWith($(data).find('#pagination'));
            }
        });
    }

    /**
     * 查询详情
     * @param id
     */
    function get(id) {
        $.ajax({
            url: '${request.contextPath}/samples/get/' + id,
            method: 'GET',
            dataType: 'html',
            success: function(data) {
                var sampleInfo = $(data).find('#sampleInfoModal').html();
                modal(sampleInfo);
            }
        });
    }

    /**
     * 新增
     */
    function create() {
        var queryForm = $('#query');
        queryForm.attr('action', '${request.contextPath}/samples/create/');
        queryForm.find('input[name="number"]').val(${page.number});
        queryForm.find('input[name="size"]').val(${page.size});
        queryForm.submit();
    }

    /**
     * 更新
     * @param id
     */
    function update(id) {
        var queryForm = $('#query');
        queryForm.attr('action', '${request.contextPath}/samples/update/' + id);
        queryForm.find('input[name="number"]').val(${page.number});
        queryForm.find('input[name="size"]').val(${page.size});
        queryForm.submit();
    }

    /**
     * 删除
     * @param id
     */
    function deleteById(id) {
        $.ajax({
            url: '${request.contextPath}/samples/delete/' + id,
            method: 'POST',
            beforeSend: function(xhr) {
                // CSRF https://docs.spring.io/spring-security/site/docs/current/reference/html5/#servlet-csrf-include
                var token = $("meta[name='_csrf']").attr("content");
                var header = $("meta[name='_csrf_header']").attr("content");
                xhr.setRequestHeader(header, token);
            },
            statusCode: {
                200: function(data) {
                    toastr.success(data);
                    list();
                },
                400: function(xhr) {
                    toastr.warning(xhr.responseText);
                },
                500: function(xhr) {
                    toastr.error(xhr.responseText);
                }
            }
        });
    }

    /**
     * 批量删除
     */
    function deleteByIds() {
        // 选中记录的ids
        var ids = [];
        $('#list tbody input[type=checkbox]:checked').each(function() {
            ids.push($(this).val());
        });
        if (ids.length < 1) {
            toastr.warning("请选择要删除的记录");
            return false;
        }

        $.ajax({
            url: '${request.contextPath}/samples/delete/',
            method: 'POST',
            data: { ids: ids },
            beforeSend: function(xhr) {
                // CSRF https://docs.spring.io/spring-security/site/docs/current/reference/html5/#servlet-csrf-include
                var token = $("meta[name='_csrf']").attr("content");
                var header = $("meta[name='_csrf_header']").attr("content");
                xhr.setRequestHeader(header, token);
            },
            statusCode: {
                200 : function(data) {
                    toastr.success(data);
                    list();
                },
                400 : function(xhr) {
                    toastr.warning(xhr.responseText);
                },
                500 : function(xhr) {
                    toastr.error(xhr.responseText);
                }
            }
        });
    }

    /**
     * thead复选框点击
     * @param element 被点击的元素
     */
    function theadCheckboxClick(element) {
        // thead复选框选中状态
        var theadChecked = $(element).prop('checked');

        // tbody复选框
        var tbodyCheckboxes = $(element).closest('table').find('tbody input[type=checkbox]');
        tbodyCheckboxes.each(function() {
            $(this).prop('checked', theadChecked);
        });
    }

    /**
     * tbody复选框点击
     * @param element 被点击的元素
     */
    function tbodyCheckboxClick(element) {
        // tbody复选框
        var tbodyCheckboxes = $(element).closest('tbody').find('input[type=checkbox]');
        // tbody被选中的复选框
        var tbodyCheckedboxes = $(element).closest('tbody').find('input[type=checkbox]:checked');

        // thead复选框
        var theadCheckbox = $(element).closest('table').find('thead input[type=checkbox]');
        theadCheckbox.prop('checked', tbodyCheckboxes.length === tbodyCheckedboxes.length);
    }
</script>
